cd C:\Users\user\RadicalAIWorkspace
python -m streamlit run gemini_explorer.py
in gcloud CLI -> default authentication configuration -> gcloud auth application-default login 

-----------------------------------------------------------------------------------------------------
--- Google Cloud Authentication ---
setting up google cloud - authenticate with google cloud
install Google cloud SDK
in terminal
    gcloud init
    select the appropriate option
    select the gmail email
    select the cloud project
    NO need to configure a default Compute Region and Zone

if you still have problems with authentication
gcloud auth application-default login
click the link - this will do a handshake - it will authenticate


--------------------------------------------------------------------------------------------------    
--- CLone a repo and create a virtual ENV ---
git clone https://github.com/radicalxdev/mission-quizify    
cd C:\Users\user\RadicalAIWorkspace\MissionQuizify\mission-quizify
python -m venv env  
.\env\Scripts\activate 
pip install -r requirements.txt
set "GOOGLE_APPLICATION_CREDENTIALS = authentication.json"


WARNING: 
Cannot add the project "platinum-tube-425318-d5" to ADC as the quota project because the account in ADC does not have the "serviceusage.services.use" permission on this project. You might receive a "quota_exceeded" or "API not enabled" error. Run $ gcloud auth application-default set-quota-project to add a quota project.
--------------------------------------------------------------------------------------------------

--- GitHub: git clone someone else's repository & git push to your own repository ---

I'm going to refer to someone else's repository as the other repository.

Create a new repository at github.com. (this is your repository)
Give it the same name as the other repository.
Don't initialize it with a README, .gitignore, or license.
Clone the other repository to your local machine. (if you haven't done so already)
    >git clone https://github.com/other-account/other-repository.git
Rename the local repository's current 'origin' to 'upstream'.
    >git remote rename origin upstream
Give the local repository an 'origin' that points to your repository.
    >git remote add origin https://github.com/your-account/your-repository.git
Push the local repository to your repository on github.
    >git push origin main
Now 'origin' points to your repository & 'upstream' points to the other repository.

Create a new branch for your changes with 
    >git checkout -b my-feature-branch.
You can git commit as usual to your repository.
Use git pull upstream main to pull changes from the other repository to your main branch.